/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as PostRouteImport } from './routes/post'
import { Route as MyphotosRouteImport } from './routes/myphotos'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ErrorRouteImport } from './routes/error'
import { Route as IndexRouteImport } from './routes/index'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const PostRoute = PostRouteImport.update({
  id: '/post',
  path: '/post',
  getParentRoute: () => rootRouteImport,
} as any)
const MyphotosRoute = MyphotosRouteImport.update({
  id: '/myphotos',
  path: '/myphotos',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ErrorRoute = ErrorRouteImport.update({
  id: '/error',
  path: '/error',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/error': typeof ErrorRoute
  '/login': typeof LoginRoute
  '/myphotos': typeof MyphotosRoute
  '/post': typeof PostRoute
  '/profile': typeof ProfileRoute
  '/signup': typeof SignupRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/error': typeof ErrorRoute
  '/login': typeof LoginRoute
  '/myphotos': typeof MyphotosRoute
  '/post': typeof PostRoute
  '/profile': typeof ProfileRoute
  '/signup': typeof SignupRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/error': typeof ErrorRoute
  '/login': typeof LoginRoute
  '/myphotos': typeof MyphotosRoute
  '/post': typeof PostRoute
  '/profile': typeof ProfileRoute
  '/signup': typeof SignupRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/error'
    | '/login'
    | '/myphotos'
    | '/post'
    | '/profile'
    | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/error' | '/login' | '/myphotos' | '/post' | '/profile' | '/signup'
  id:
    | '__root__'
    | '/'
    | '/error'
    | '/login'
    | '/myphotos'
    | '/post'
    | '/profile'
    | '/signup'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ErrorRoute: typeof ErrorRoute
  LoginRoute: typeof LoginRoute
  MyphotosRoute: typeof MyphotosRoute
  PostRoute: typeof PostRoute
  ProfileRoute: typeof ProfileRoute
  SignupRoute: typeof SignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/post': {
      id: '/post'
      path: '/post'
      fullPath: '/post'
      preLoaderRoute: typeof PostRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/myphotos': {
      id: '/myphotos'
      path: '/myphotos'
      fullPath: '/myphotos'
      preLoaderRoute: typeof MyphotosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/error': {
      id: '/error'
      path: '/error'
      fullPath: '/error'
      preLoaderRoute: typeof ErrorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ErrorRoute: ErrorRoute,
  LoginRoute: LoginRoute,
  MyphotosRoute: MyphotosRoute,
  PostRoute: PostRoute,
  ProfileRoute: ProfileRoute,
  SignupRoute: SignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
